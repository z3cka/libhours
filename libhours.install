<?php
// $Id$

/**
 * @file
 * Install, Uninstalls Schema for lib hours module
 *
 * @author Sean Watkins <slwatkins@uh.edu>
 * @copyright 2011 University of Houston Libraries (http://info.lib.uh.edu)
 */
 
/**
 * Implements hook_install()
 */
function libhours_install(){
	drupal_install_schema('libhours');
	
	/* pre-populate the semesters and type tables.
	   need to check if the table already has something in there to avoid overwrites or duplicates
	   that can happen when enabling/disabling the module.
	*/
	if(!db_result(db_query("SELECT COUNT(*) FROM {libhours_semesters} WHERE true"))){
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Fall');
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Spring');
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Summer');
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Finals');
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Winter Break');
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Spring Break');
		db_query("INSERT INTO {libhours_semesters} (name) VALUES ('%s')", 'Intersession');
	}
	
	if(!db_result(db_query("SELECT COUNT(*) FROM {libhours_type} WHERE true"))){
		db_query("INSERT INTO {libhours_type} (name) VALUES ('%s')", 'Holiday');
		db_query("INSERT INTO {libhours_type} (name) VALUES ('%s')", 'Emergency');
		db_query("INSERT INTO {libhours_type} (name) VALUES ('%s')", 'Unexpected');
	}
	
}

/**
 * Implements hook_uninstall()
 */
function libhours_uninstall(){
	drupal_uninstall_schema('libhours');
}

/**
 * Implements hook_schema()
 */
function libhours_schema(){
	$schema['libhours_locations'] = array(
		'description' => t('Library Locations'),
		'fields' => array(
			'lid' => array(
				'description' => t('unique identifier for locations'),
				'type' => 'serial',
				'not null' => true,
				'unsigned' => true),
			'name' => array(
				'description' => t('name of location'),
				'type' => 'varchar',
				'length' => 100,
				'not null' => true,
				'default' => ''),
			'description' => array(
				'description' => t('location description text'),
				'type' => 'varchar',
				'length' => 500,
				'not null' => true,
				'default' => ''),
			'parent' => array(
				'description' => t('parent location lid identifier'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true,
				'default' => 0)
		),
		'primary key' => array('lid')
	);
	
	$schema['libhours_periods'] = array(
		'description' => t('Location periods'),
		'fields' => array(
			'pid' => array(
				'description' => t('unique identifier for periods'),
				'type' => 'serial',
				'not null' => true,
				'unsigned' => true),
			'lid' => array(
				'description' => t('foreign key to locations identifier'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'sid' => array(
				'description' => t('foreign key to semester identifier'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'from_date' => array(
				'description' => t('periods start date'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'to_date' => array(
				'description' => t('periods end date'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
		),
		'primary key' => array('pid')		
	);
	
	$schema['libhours_semesters'] = array(
		'description' => t('Semesters for a period'),
		'fields' => array(
			'sid' => array(
				'description' => t('unique identifier for semesters'),
				'type' => 'serial',
				'not null' => true,
				'unsigned' => true),
			'name' => array(
				'description' => t('semester name'),
				'type' => 'varchar',
				'length' => 100,
				'not null' => true,
				'default' => '')
		),
		'primary key' => array('sid')
	);
	
	$schema['libhours_hours'] = array(
		'description' => t('Period hours of operation'),
		'fields' => array(
			'hid' => array(
				'description' => t('unique identifier for hours'),
				'type' => 'serial',
				'not null' => true,
				'unsigned' => true),
			'pid' => array(
				'description' => t('foreign key to periods identifier'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'dow' => array(
				'description' => t('Days of week binary string'),
				'type' => 'varchar',
				'length' => 7,
				'not null' => true,
				'default' => '1111111'),
			'open' => array(
				'description' => t('The hour the location opens. Open 24hours is when open is 0 and close is 2400. Close 24hours is when open and close are 0'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'close' => array(
				'description' => t('The hour the location closes'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true)
		),
		'primary key' => array('hid')
	);
	
	$schema['libhours_exceptions'] = array(
		'description' => t('Exceptions for locations'),
		'fields' => array(
			'eid' => array(
				'description' => t('unique identifier for exceptions'),
				'type' => 'serial',
				'not null' => true,
				'unsigned' => true),
			'lid' => array(
				'description' => t('foreign key to location identifier'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'tid' => array(
				'description' => t('foreign key to type identifier'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'label' => array(
				'description' => t('exception description label'),
				'type' => 'varchar',
				'length' => 500,
				'not null' => true,
				'default' => ''),
			'from_date' => array(
				'description' => t('exception start date'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'to_date' => array(
				'description' => t('exception end date'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'open' => array(
				'description' => t('The hour the location opens. Open 24hours is when open is 0 and close is 2400. Close 24hours is when open and close are 0'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true),
			'close' => array(
				'description' => t('The hour the location closes'),
				'type' => 'int',
				'not null' => true,
				'unsigned' => true)
		),
		'primary key' => array('eid')
	);

	$schema['libhours_type'] = array(
		'description' => t('Exception type identifier'),
		'fields' => array(
			'tid' => array(
				'description' => t('unique identifier for exception type'),
				'type' => 'serial',
				'not null' => true,
				'unsigned' => true),
			'name' => array(
				'description' => t('type name'),
				'type' => 'varchar',
				'length' => 100,
				'default' => ''),
		),
		'primary key' => array('tid')
	);

	return $schema;
}